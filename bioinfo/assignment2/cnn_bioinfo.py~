import numpy as np
import matplotlib.pyplot as plt
from cs231n.classifiers.cnn import *
from cs231n.data_utils import get_CIFAR10_data
from cs231n.gradient_check import eval_numerical_gradient_array, eval_numerical_gradient
from cs231n.layers import *
from cs231n.fast_layers import *
from cs231n.solver import Solver
#load data
#data=??
'''
Data must be of the format
  data = {
    'X_train': # training data
    'y_train': # training labels
    'X_val': # validation data
    'X_train': # validation labels
  }
'''
num_inputs = 35126
input_dim = (3, 256, 256)
reg = 0.0
num_classes = 5
X_val=??
y_val=??
#X = np.random.randn(num_inputs, *input_dim)
#y = np.random.randint(num_classes, size=num_inputs)

model = ThreeLayerConvNet(num_filters=5, filter_size=5,
                          input_dim=input_dim, hidden_dim=7,
                          dtype=np.float64)
loss, grads = model.loss(X, y)
solver = Solver(model, data,
                num_epochs=1, batch_size=50,
                update_rule='adam',
                optim_config={
                  'learning_rate': 1e-3,
                },
                verbose=True, print_every=20)
solver.train()

